buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.craigburke.gradle:karma-gradle:1.4.3"
        classpath "com.craigburke.gradle:client-dependencies:1.3.1"
        classpath "org.grails.plugins:angularjs-scaffolding:1.0.3"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.8"
        classpath "org.grails.plugins:views-gradle:1.1.6"
    }
}

version "0.9.8.3.5"
group "webpoint"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.craigburke.karma"
apply plugin:"com.craigburke.client-dependencies"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"org.grails.plugins.views-json"


repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.3.0"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    // Use Jetty
    //compile "org.springframework.boot:spring-boot-starter-jetty"

    //compile 'org.grails.plugins:spring-security-core:3.2.3'
    compile "org.grails.plugins:spring-security-rest:2.0.0.RC1"       // 2.0.0.RC1
    compile "org.grails.plugins:spring-security-rest-gorm:2.0.0.RC1"  // 2.0.0.RC1
    compile "org.grails.plugins:grails-spring-websocket:2.3.0"
    // Apache Camel
    compile "org.apache.camel:camel-core:2.18.3"  // 2.15.3 2.18.3 2.19.0
    compile "org.apache.camel:camel-spring-boot:2.18.3"
    compile "org.apache.camel:camel-twitter:2.18.3"
    compile "org.apache.camel:camel-stream:2.18.3"

    compile "org.imgscalr:imgscalr-lib:4.2"

    compile "org.grails:grails-core"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"

    //compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"

    compile "org.grails.plugins:angularjs-scaffolding:1.0.3"

    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    compile "org.grails.plugins:mongodb"
    compile "org.grails.plugins:gsp"

    console "org.grails:grails-console"
    profile "org.grails.profiles:angularjs"
    provided "org.grails.plugins:embedded-mongodb:1.0.2"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"   // 2.15.1 2.14.8 3.0.10
    runtime 'com.google.guava:guava:11.0.1'

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-datastore-rest-client"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.springframework.boot:spring-boot-starter-tomcat"
    testCompile "org.apache.commons:commons-compress:1.13"
    testCompile "io.micronaut:micronaut-http-client:1.0.0"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always ')
    addResources = true
    systemProperties = System.properties
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

processResources {
    filesMatching("**/*.yml") {
        expand(MONGO_WEBPOINT_HOST: MONGO_WEBPOINT_HOST, MONGO_WEBPOINT_USER: MONGO_WEBPOINT_USER,
                MONGO_WEBPOINT_PASS: MONGO_WEBPOINT_PASS,
                TWITTER_CONSUMER_KEY: TWITTER_CONSUMER_KEY, TWITTER_CONSUMER_SECRET: TWITTER_CONSUMER_SECRET,
                TWITTER_ACCESS_TOKEN: TWITTER_ACCESS_TOKEN, TWITTER_ACCESS_TOKEN_SECRET: TWITTER_ACCESS_TOKEN_SECRET
        )
    }
}

clientDependencies {
    npm {
        'angular'('1.5.x', into: 'angular') {
            include 'angular.js'
        }
        'angular-resource'('1.5.x', into: 'angular') {
            include 'angular-resource.js'
        }
        'angular-route'('1.5.x', into: 'angular') {
            include 'angular-route.js'
        }
        'angular-sanitize'('1.5.x', into: 'angular') {
            include 'angular-sanitize.js'
        }
        'angular-animate'('1.5.x', into: 'angular') {
            include 'angular-animate.js'
        }
        'angular-aria'('1.5.x', into: 'angular') {
            include 'angular-aria.js'
        }
        'angular-mocks'('1.5.x', into: 'angular') {
            include 'angular-mocks.js'
        }
        'angular-messages'('1.5.x', into: 'angular') {
            include 'angular-messages.js'
        }
        'angular-http-auth'('1.5.x', into: 'angular-http-auth', from: 'src') {  // 1.5.x
            include 'http-auth-interceptor.js'
        }
        'angular-local-storage'('0.5.x', into: 'angular', from: 'dist') {
            include 'angular-local-storage.js'
        }
        'angular-spinner'('0.8.x', into: 'angular') {
            include 'angular-spinner.js'
        }
        'spin.js'('2.x.x', into: 'spin.js') {
            include 'spin.js'
        }
        'angular-ui-bootstrap'('1.3.x', into: 'angular') {
            include 'ui-bootstrap-tpls.js'
        }
        'angular-ui-router'('0.2.x', into: 'angular', from: 'release') {
            include 'angular-ui-router.js'
        }
        'bootstrap'('3.3.x', into: 'bootstrap', from: 'dist') {
            include 'css/bootstrap.css'
            include 'css/bootstrap.css.map'
            include 'fonts/**'
        }
        'angular-material'('1.1.x', into: 'angular-material') {
            include 'angular-material.js'
            include 'angular-material.css'
        }
        'material-design-icons'('2.2.x', into: 'material-design-icons') {
            include 'iconfont/**'
        }
        'ng-stomp'('0.5.x', into: 'ng-modules', from: 'dist') {
            include 'ng-stomp.standalone.min.js'
        }
        'ng-file-upload'('12.2.x', into: 'ng-modules', from: 'dist') {
            include 'ng-file-upload.min.js'
        }
    }
}

karma {
    dependencies([
        'karma-wrap-preprocessor',
//        'karma-sinon',
        // 'phantomjs@1.9.7-14',
        //Needed because karma 3.x depended on log4js 3.x which had a breaking change.
        // It was in log4js/lib/layouts.js:69 with util.format(...loggingEvent.data)
        // 'karma@2.0.5'
    ])
    // basePath = 'grails-app/assets'
    profile 'angularJS'
    preprocessors = [
            'grails-app/assets/javascripts/**/*.js': ['wrap'],
            // 'grails-app/assets/javascripts/webpoint/screen/**/*.js': ['wrap'],
            // 'grails-app/assets/javascripts/webpoint/user/**/*.js': ['wrap'],
    ]
    wrapPreprocessor = [
            template: "(function () { 'use strict';  <%= contents %> })()"
    ]
    colors = true
    frameworks = ['jasmine']
    browsers = ['Chrome']  // 'Chrome' , 'PhantomJS'
    reporters = ['progress']  // junit, progress, dots, spec
    logLevel = ['DEBUG']
}

assets {
    minifyJs = true
    minifyCss = true
    enableSourceMaps = true
    maxThreads = 4 //useful for concurrent asset processing during build
    configOptions = [:] //useful for custom config on extension libraries
//    minifyOptions = [
//            optimizationLevel: 'SIMPLE',
//            angularPass: true // Can use @ngInject annotation for Angular Apps
//    ]
}

grails {
    println 'webpoint'

}

//springBoot {
    // Enable the creation of a fully
    // executable archive file.
//    executable = true

    // Set values for variable placeholders
    // in the default launch script.
    //embeddedLaunchScriptProperties =
    //        [initInfoDescription: project.description,
    //         initInfoShortDescription: project.name,
    //         initInfoProvides: jar.baseName,
    //         mode: 'service']
//}

//jar {
//    archiveName('webpoint.jar')
//}